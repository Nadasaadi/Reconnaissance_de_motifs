import pandas as pd
from collections import Counter
import matplotlib.pyplot as plt
import seaborn as sns
import os

# =====================================================================
# 1. Chargement du DataFrame
# =====================================================================
input_file = "C:/Users/DELL/Desktop/pattern_recognition/output/cytokines1_dataframe.csv"

# ‚úÖ Lecture du fichier CSV avec le bon s√©parateur (virgule)
df = pd.read_csv(input_file, sep=",")

print(f"‚úÖ {len(df)} s√©quences charg√©es avec succ√®s.\n")
print("Aper√ßu du contenu :")
print(df.head(3))
print("\nColonnes disponibles :", df.columns.tolist())

# =====================================================================
# 2. Description g√©n√©rale du contenu
# =====================================================================
print("\n=== DESCRIPTION DU CONTENU DU FICHIER ===")

# Nombre total de s√©quences
nombre_sequences = len(df)

# Esp√®ces uniques pr√©sentes
if "Specie" in df.columns:
    especes = df["Specie"].unique()
    nombre_especes = len(especes)
else:
    especes = ["Inconnue"]
    nombre_especes = 1

# ‚úÖ Ajout d'une colonne pour la longueur des s√©quences
df["Length"] = df["Sequence"].apply(len)

# Longueur moyenne et maximale
longueur_moyenne = df["Length"].mean()
longueur_maximale = df["Length"].max()

# Nombre total d‚Äôacides amin√©s dans l‚Äôensemble du fichier
nombre_total_acides_amines = df["Length"].sum()

# Affichage
print(f"Nombre total de s√©quences : {nombre_sequences}")
print(f"Nombre total d'esp√®ces pr√©sentes : {nombre_especes}")
print("Esp√®ces identifi√©es :")
for esp in especes:
    print(f" - {esp}")
print(f"Longueur moyenne des s√©quences : {longueur_moyenne:.2f} acides amin√©s")
print(f"Longueur maximale observ√©e : {longueur_maximale} acides amin√©s")
print(f"Nombre total d‚Äôacides amin√©s dans le fichier : {nombre_total_acides_amines}")

# =====================================================================
# 3. Statistiques descriptives globales sur les longueurs
# =====================================================================
print("\n=== STATISTIQUES DESCRIPTIVES SUR LES LONGUEURS ===")
stats = df["Length"].describe()
print(stats)

# =====================================================================
# 4. Distribution des longueurs des s√©quences
# =====================================================================
plt.figure(figsize=(10, 5))
sns.histplot(df["Length"], bins=50, kde=True, color="skyblue")
plt.title("Distribution des longueurs des s√©quences prot√©iques (Cytokines)")
plt.xlabel("Longueur de la s√©quence (nombre d'acides amin√©s)")
plt.ylabel("Nombre de s√©quences")
plt.show()

# =====================================================================
# 5. Analyse de la fr√©quence des acides amin√©s
# =====================================================================
print("\n=== FR√âQUENCE DES ACIDES AMIN√âS ===")

# Concat√©ner toutes les s√©quences
toutes_sequences = "".join(df["Sequence"])
frequence_acides = Counter(toutes_sequences)

# Conversion en DataFrame pour affichage
freq_df = pd.DataFrame(frequence_acides.items(), columns=["Acide_Amine", "Fr√©quence"])
freq_df = freq_df.sort_values(by="Fr√©quence", ascending=False)

print("\nLes 10 acides amin√©s les plus fr√©quents :")
print(freq_df.head(10))

# Graphique
plt.figure(figsize=(10, 5))
sns.barplot(data=freq_df, x="Acide_Amine", y="Fr√©quence", palette="magma")
plt.title("Fr√©quence des acides amin√©s dans les s√©quences de cytokines")
plt.xlabel("Acide amin√©")
plt.ylabel("Fr√©quence")
plt.show()

# =====================================================================
# 6. Statistiques par esp√®ce (si plusieurs pr√©sentes)
# =====================================================================
if "Specie" in df.columns:
    print("\n=== STATISTIQUES PAR ESP√àCE ===")
    stats_par_espece = df.groupby("Specie")["Length"].describe()
    print(stats_par_espece)

# =====================================================================
# 7. Sauvegarde des r√©sultats dans un fichier texte
# =====================================================================
output_dir = "C:/Users/DELL/Desktop/pattern_recognition/output"
os.makedirs(output_dir, exist_ok=True)
output_file = os.path.join(output_dir, "statistiques_descriptives_cytokines.txt")

with open(output_file, "w", encoding="utf-8") as f:
    f.write("=== DESCRIPTION DU CONTENU DU FICHIER ===\n")
    f.write(f"Nombre total de s√©quences : {nombre_sequences}\n")
    f.write(f"Nombre total d'esp√®ces pr√©sentes : {nombre_especes}\n")
    f.write("Esp√®ces identifi√©es :\n")
    for esp in especes:
        f.write(f" - {esp}\n")
    f.write(f"Longueur moyenne des s√©quences : {longueur_moyenne:.2f} acides amin√©s\n")
    f.write(f"Longueur maximale observ√©e : {longueur_maximale} acides amin√©s\n")
    f.write(f"Nombre total d‚Äôacides amin√©s dans le fichier : {nombre_total_acides_amines}\n\n")

    f.write("=== STATISTIQUES DESCRIPTIVES SUR LES LONGUEURS ===\n")
    f.write(str(stats))
    f.write("\n\n=== FR√âQUENCE DES ACIDES AMIN√âS ===\n")
    for aa, freq in frequence_acides.items():
        f.write(f"{aa}: {freq}\n")

print(f"\nüíæ Les statistiques descriptives d√©taill√©es ont √©t√© enregistr√©es dans : {output_file}")
